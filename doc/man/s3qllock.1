.TH "S3QLLOCK" "1" "September 20, 2011" "1.1.4" "S3QL"
.SH NAME
s3qllock \- Make trees on an S3QL file system immutable
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH SYNOPSIS
.sp
.nf
.ft C
s3qllock [options] <directory>
.ft P
.fi
.SH DESCRIPTION
.sp
S3QL is a file system for online data storage. Before using S3QL, make
sure to consult the full documentation (rather than just the man pages
which only briefly document the available userspace commands).
.sp
The \fBs3qllock\fP command makes a directory tree in an S3QL file
system immutable. Immutable trees can no longer be changed in any way
whatsoever. You can not add new files or directories and you can not
change or delete existing files and directories. The only way to get
rid of an immutable tree is to use the \fBs3qlrm\fP command.
.sp
\fBs3qllock\fP can only be called by the user that mounted the file system
and (if the file system was mounted with \fB\-\-allow\-other\fP or
\fB\-\-allow\-root\fP) the root user. This limitation might be
removed in the future (see \fI\%issue 155\fP).
.SH RATIONALE
.sp
Immutability is a feature designed for backups. Traditionally, backups
have been made on external tape drives. Once a backup was made, the
tape drive was removed and locked somewhere in a shelf. This has the
great advantage that the contents of the backup are now permanently
fixed. Nothing (short of physical destruction) can change or delete
files in the backup.
.sp
In contrast, when backing up into an online storage system like S3QL,
all backups are available every time the file system is mounted.
Nothing prevents a file in an old backup from being changed again
later on. In the worst case, this may make your entire backup system
worthless. Imagine that your system gets infected by a nasty virus
that simply deletes all files it can find \-\- if the virus is active
while the backup file system is mounted, the virus will destroy all
your old backups as well!
.sp
Even if the possibility of a malicious virus or trojan horse is
excluded, being able to change a backup after it has been made is
generally not a good idea. A common S3QL use case is to keep the file
system mounted at all times and periodically create backups with
\fBrsync \-a\fP. This allows every user to recover her files from a
backup without having to call the system administrator. However, this
also allows every user to accidentally change or delete files \fIin\fP one
of the old backups.
.sp
Making a backup immutable protects you against all these problems.
Unless you happen to run into a virus that was specifically programmed
to attack S3QL file systems, backups can be neither deleted nor
changed after they have been made immutable.
.SH OPTIONS
.sp
The \fBs3qllock\fP command accepts the following options:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \-\-debug
.
activate debugging output
.TP
.B \-\-quiet
.
be really quiet
.TP
.B \-\-version
.
just print program version and exit
.UNINDENT
.UNINDENT
.UNINDENT
.SH EXIT STATUS
.sp
\fBs3qllock\fP returns exit code 0 if the operation succeeded and 1 if some
error occured.
.SH SEE ALSO
.sp
The S3QL homepage is at \fI\%http://code.google.com/p/s3ql/\fP.
.sp
The full S3QL documentation should also be installed somewhere on your
system, conventional locations are \fB/usr/share/doc/s3ql\fP or
\fB/usr/local/doc/s3ql\fP.
.SH COPYRIGHT
2008-2011, Nikolaus Rath
.\" Generated by docutils manpage writer.
.\" 
.
